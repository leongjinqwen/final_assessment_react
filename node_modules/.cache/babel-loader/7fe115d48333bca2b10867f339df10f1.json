{"ast":null,"code":"import _toConsumableArray from \"/Users/jwleong/final-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jwleong/final-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jwleong/final-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jwleong/final-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jwleong/final-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jwleong/final-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jwleong/final-frontend/src/pages/PhotoPage.js\";\nimport React from 'react';\nimport { Card, Button, CardImg, CardImgOverlay } from 'reactstrap';\n\nvar PhotoPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PhotoPage, _React$Component);\n\n  function PhotoPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PhotoPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PhotoPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      constraints: {\n        audio: false,\n        video: {\n          width: 400,\n          height: 300\n        }\n      },\n      filter: 'none',\n      width: 500,\n      height: 0,\n      images: [],\n      success: [],\n      errors: [],\n      streaming: false\n    };\n\n    _this.canPlay = function (e) {\n      var _this$state = _this.state,\n          streaming = _this$state.streaming,\n          height = _this$state.height,\n          width = _this$state.width;\n\n      if (!streaming) {\n        var video = _this.refs.myVideo; // Set video / canvas height\n        // video.setAttribute('width', width);\n        // video.setAttribute('height', height);\n        // canvas.setAttribute('width', width);\n        // canvas.setAttribute('height', height);\n\n        _this.setState({\n          streaming: !_this.state.streaming,\n          height: video.videoHeight / (video.videoWidth / width)\n        });\n\n        console.log(width);\n        console.log(height);\n      }\n    };\n\n    _this.takePicture = function () {\n      var _this$state2 = _this.state,\n          width = _this$state2.width,\n          height = _this$state2.height,\n          filter = _this$state2.filter; // Create canvas\n\n      var canvas = _this.refs.myCanvas;\n      var video = _this.refs.myVideo;\n      var context = canvas.getContext('2d'); // set canvas props\n\n      canvas.width = width;\n      canvas.height = height; // Draw an image of the video on the canvas\n\n      if (filter !== undefined) {\n        // Set image filter\n        context.filter = filter; // Create image from the canvas\n\n        context.drawImage(video, 0, 0, width, height); // create image url\n\n        var imgUrl = canvas.toDataURL('image/png'); // Set img src\n\n        console.log(imgUrl);\n        var image = {\n          imgUrl: imgUrl\n        };\n\n        var album = _toConsumableArray(_this.state.images); // Add image to album\n\n\n        album.push(image);\n\n        _this.setState({\n          images: album\n        });\n      }\n    };\n\n    _this.filterChange = function (e) {\n      e.preventDefault();\n      console.log(e.target.value);\n      var photoFilter = e.target.value;\n\n      _this.setState({\n        filter: photoFilter\n      });\n    };\n\n    _this.clearButton = function () {\n      var list = _this.refs.select; // Reset select list\n\n      list.selectedIndex = 0; // Set video filter\n\n      _this.setState({\n        // Clear photos\n        images: [],\n        // Change filter back to none\n        filter: 'none'\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PhotoPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      navigator.mediaDevices.getUserMedia(this.state.constraints).then(function (stream) {\n        var video = _this2.refs.myVideo;\n        video.srcObject = stream;\n        video.play();\n        console.log(video.videoHeight);\n        console.log(video.videoWidth);\n\n        _this2.setState({\n          height: Dimensions.get('window').width / (16 / 9)\n        });\n      }).catch(function (err) {\n        console.log(\"Error: \".concat(err));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var images = this.state.images;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"top-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        style: {\n          filter: \"\".concat(this.state.filter),\n          height: \"\".concat(this.state.height)\n        },\n        ref: \"myVideo\",\n        onPlay: this.canPlay,\n        className: \"my-video\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Stream not available...\"), React.createElement(Button, {\n        color: \"dark\",\n        onClick: this.takePicture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Take Photo\"), React.createElement(\"select\", {\n        className: \"select\",\n        onChange: this.filterChange,\n        ref: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Normal\"), React.createElement(\"option\", {\n        value: \"grayscale(100%)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Grayscale\"), React.createElement(\"option\", {\n        value: \"sepia(100%)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Sepia\"), React.createElement(\"option\", {\n        value: \"invert(100%)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Invert\"), React.createElement(\"option\", {\n        value: \"hue-rotate(90deg)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Hue\"), React.createElement(\"option\", {\n        value: \"blur(5px)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Blur\"), React.createElement(\"option\", {\n        value: \"contrast(200%)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Contrast\"), React.createElement(\"option\", {\n        value: \"contrast(100%) brightness(150%)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Brightness\")), React.createElement(Button, {\n        color: \"light\",\n        onClick: this.clearButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Clear\"), React.createElement(\"canvas\", {\n        id: \"canvas\",\n        ref: \"myCanvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"bottom-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, images.map(function (images, index) {\n        return React.createElement(Card, {\n          inverse: true,\n          key: index,\n          style: {\n            width: '50%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(CardImg, {\n          src: images.imgUrl,\n          alt: images.imgUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }), React.createElement(CardImgOverlay, {\n          className: \"d-flex align-items-end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: images.imgUrl,\n          download: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, \"Download\"))));\n      }))));\n    }\n  }]);\n\n  return PhotoPage;\n}(React.Component);\n\nexport { PhotoPage as default };","map":{"version":3,"sources":["/Users/jwleong/final-frontend/src/pages/PhotoPage.js"],"names":["React","Card","Button","CardImg","CardImgOverlay","PhotoPage","state","constraints","audio","video","width","height","filter","images","success","errors","streaming","canPlay","e","refs","myVideo","setState","videoHeight","videoWidth","console","log","takePicture","canvas","myCanvas","context","getContext","undefined","drawImage","imgUrl","toDataURL","image","album","push","filterChange","preventDefault","target","value","photoFilter","clearButton","list","select","selectedIndex","navigator","mediaDevices","getUserMedia","then","stream","srcObject","play","Dimensions","get","catch","err","map","index","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Button, CardImg, CardImgOverlay } from 'reactstrap';\n\n\nexport default class PhotoPage extends React.Component {\n    state = {\n        constraints: { audio: false, video: { width: 400, height: 300 } },\n        filter: 'none',\n        width:500,\n        height:0,\n        images:[],\n        success:[],\n        errors:[],\n        streaming:false\n    }\n\n    canPlay=(e)=>{\n        const {streaming,height,width} = this.state\n        if (!streaming) {\n            const video = this.refs.myVideo;\n          // Set video / canvas height\n            \n            // video.setAttribute('width', width);\n            // video.setAttribute('height', height);\n            // canvas.setAttribute('width', width);\n            // canvas.setAttribute('height', height);\n        \n            this.setState({\n                streaming : !this.state.streaming,\n                height : video.videoHeight / (video.videoWidth / width)\n            })\n            console.log(width)\n            console.log(height)\n        }\n    }\n    \n    componentDidMount(){\n        navigator.mediaDevices.getUserMedia(this.state.constraints)\n            .then(stream => {\n                const video = this.refs.myVideo;            \n                video.srcObject = stream;\n                video.play();\n                console.log(video.videoHeight)\n                console.log(video.videoWidth)\n                this.setState({\n                    height: Dimensions.get('window').width / (16 / 9) \n                })\n            })\n            .catch(function(err) {\n                console.log(`Error: ${err}`);\n            });\n    }\n\n    takePicture = () => {\n        const { width,height,filter} = this.state\n        // Create canvas\n        const canvas = this.refs.myCanvas;\n        const video = this.refs.myVideo;  \n        const context = canvas.getContext('2d');\n       \n        // set canvas props\n        canvas.width = width;\n        canvas.height = height;\n        // Draw an image of the video on the canvas\n        if (filter !== undefined) {\n            // Set image filter\n            context.filter = filter\n            // Create image from the canvas\n            context.drawImage(video, 0, 0, width, height);\n            // create image url\n            const imgUrl = canvas.toDataURL('image/png');\n            // Set img src\n            console.log(imgUrl)\n            const image = {imgUrl:imgUrl}\n            const album = [...this.state.images]\n            // Add image to album\n            album.push(image)\n            this.setState({\n              images: album\n            })\n        }\n    }\n\n    filterChange = (e)=> {\n        e.preventDefault();\n        console.log(e.target.value)\n        const photoFilter = e.target.value\n        this.setState({\n            filter : photoFilter,\n        })\n    }\n\n    clearButton =()=>{\n        const list = this.refs.select;   \n        // Reset select list\n        list.selectedIndex = 0;\n        // Set video filter\n        this.setState({\n            // Clear photos\n            images:[],\n            // Change filter back to none\n            filter : 'none'\n        })\n    }\n\n    \n\n    render() {\n        const {images} = this.state\n        return (\n            <>\n                <div className=\"container\">\n                    <div className=\"top-container\">\n                        <video style={{filter:`${this.state.filter}`,height:`${this.state.height}`}} ref=\"myVideo\" onPlay={this.canPlay} className=\"my-video\">Stream not available...</video> \n                        <Button color=\"dark\" onClick={this.takePicture}>\n                        Take Photo\n                        </Button>\n                        <select className=\"select\" onChange={this.filterChange} ref=\"select\">\n                            <option value=\"none\">Normal</option>\n                            <option value=\"grayscale(100%)\">Grayscale</option>\n                            <option value=\"sepia(100%)\">Sepia</option>\n                            <option value=\"invert(100%)\">Invert</option>\n                            <option value=\"hue-rotate(90deg)\">Hue</option>\n                            <option value=\"blur(5px)\">Blur</option>\n                            <option value=\"contrast(200%)\">Contrast</option>\n                            <option value=\"contrast(100%) brightness(150%)\">Brightness</option>\n                        </select>\n                        <Button color=\"light\" onClick={this.clearButton}>Clear</Button>\n                        <canvas id=\"canvas\" ref=\"myCanvas\"></canvas>\n                    </div>\n                    <div className=\"bottom-container\">\n                        {\n                        images.map((images, index) =>(\n                            <Card inverse key={index} style={{width:'50%'}}>\n                                <CardImg src={images.imgUrl} alt={images.imgUrl} />\n                                <CardImgOverlay className='d-flex align-items-end'>\n                                    <a href={images.imgUrl} download><Button color=\"primary\">Download</Button></a>\n                                </CardImgOverlay>\n                            </Card>\n                        )\n                        )\n                        }\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jwleong/final-backend/react-front/src/pages/UploadPage.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nvar UploadPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UploadPage, _React$Component);\n\n  function UploadPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UploadPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UploadPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.handleUpload = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var data = JSON.parse(localStorage.me);\n      axios({\n        method: 'post',\n        url: 'http://localhost:5000/api/v1/images/upload',\n        data: {\n          url: event.target.value,\n          userid: data.user.id\n        }\n      }).then(function (response) {\n        console.log(response);\n\n        _this.setState({\n          success: response.data.message\n        });\n      }).catch(function (error) {\n        _this.setState({\n          errors: error.response.data.message\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n        name: \"file\",\n        type: \"file\",\n        onChange: this.handleUpload,\n        className: \"file-upload\",\n        \"data-cloudinary-field\": \"image_id\",\n        \"data-form-data\": \"{ 'transformation': {'crop':'limit','tags':'samples','width':3000,'height':2000}}\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UploadPage;\n}(React.Component);\n\nexport { UploadPage as default };","map":{"version":3,"sources":["/Users/jwleong/final-backend/react-front/src/pages/UploadPage.js"],"names":["React","axios","UploadPage","state","handleUpload","event","preventDefault","file","target","files","data","JSON","parse","localStorage","me","method","url","value","userid","user","id","then","response","console","log","setState","success","message","catch","error","errors","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,U;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ,E;;UAIRC,Y,GAAa,UAACC,KAAD,EAAU;AAEnBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,EAAxB,CAAb;AACAb,MAAAA,KAAK,CAAC;AACFc,QAAAA,MAAM,EAAE,MADN;AAEFC,QAAAA,GAAG,EAAE,4CAFH;AAGFN,QAAAA,IAAI,EAAE;AACFM,UAAAA,GAAG,EAAEX,KAAK,CAACG,MAAN,CAAaS,KADhB;AAEFC,UAAAA,MAAM,EAAGR,IAAI,CAACS,IAAL,CAAUC;AAFjB;AAHJ,OAAD,CAAL,CAQCC,IARD,CAQM,UAAAC,QAAQ,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,cAAKG,QAAL,CAAc;AACVC,UAAAA,OAAO,EAAGJ,QAAQ,CAACZ,IAAT,CAAciB;AADd,SAAd;AAGH,OAbD,EAcCC,KAdD,CAcO,UAAAC,KAAK,EAAI;AACZ,cAAKJ,QAAL,CAAc;AACVK,UAAAA,MAAM,EAAGD,KAAK,CAACP,QAAN,CAAeZ,IAAf,CAAoBiB;AADnB,SAAd;AAGH,OAlBD;AAmBH,K;;;;;;;6BAEQ;AACL,aACI,0CACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,QAAQ,EAAE,KAAKvB,YAA9C;AACA,QAAA,SAAS,EAAC,aADV;AACwB,iCAAsB,UAD9C;AAEA,0BAAe,mFAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAOH;;;;EAvCmCJ,KAAK,CAAC+B,S;;SAAzB7B,U","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nexport default class UploadPage extends React.Component {\n    state = {\n    }\n    \n\n    handleUpload=(event)=> {\n        \n        event.preventDefault();\n        const file = event.target.files[0]\n        const data = JSON.parse(localStorage.me)\n        axios({\n            method: 'post',\n            url: 'http://localhost:5000/api/v1/images/upload',\n            data: { \n                url: event.target.value,\n                userid : data.user.id,\n            }\n        })\n        .then(response => {\n            console.log(response);\n            this.setState({\n                success : response.data.message,\n            })\n        })\n        .catch(error => {\n            this.setState({\n                errors : error.response.data.message,\n            })\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <input name=\"file\" type=\"file\" onChange={this.handleUpload}\n                className=\"file-upload\" data-cloudinary-field=\"image_id\"\n                data-form-data=\"{ 'transformation': {'crop':'limit','tags':'samples','width':3000,'height':2000}}\"/>\n            </>\n        )\n    }\n  }"]},"metadata":{},"sourceType":"module"}
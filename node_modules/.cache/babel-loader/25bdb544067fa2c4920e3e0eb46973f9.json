{"ast":null,"code":"import _classCallCheck from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jwleong/final-backend/react-front/src/pages/VideoPage.js\";\nimport React from 'react';\nimport MediaHandler from '../components/MediaHandler';\nimport Pusher from 'pusher-js';\nimport Peer from 'simple-peer'; // import Pusher from '../server'\n\nvar VideoPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VideoPage, _React$Component);\n\n  function VideoPage() {\n    var _this;\n\n    _classCallCheck(this, VideoPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VideoPage).call(this));\n    _this.state = {\n      hasMedia: false,\n      otherUserId: null\n    };\n    _this.user = JSON.parse(localStorage.me).user;\n    _this.user.stream = null;\n    _this.peers = {};\n    _this.mediaHandler = new MediaHandler();\n\n    _this.setupPusher();\n\n    _this.callTo = _this.callTo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setupPusher = _this.setupPusher.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.startPeer = _this.startPeer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(VideoPage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      // this.user1 = new RTCPeerConnection()\n      // this.user2 = new RTCPeerConnection()\n      // this.user1.onicecandidate = (e) =>{\n      //     if (e.candidate) {\n      //         this.user2.addIceCandidate(e.candidate);\n      //     }\n      // }\n      // this.user2.onicecandidate = (e) =>{\n      //     if (e.candidate) {\n      //         this.user1.addIceCandidate(e.candidate);\n      //     }\n      // }\n      // this.pc.oniceconnectionstatechange = (e) =>{\n      //     console.log(e)\n      // }\n      this.mediaHandler.getPermissions().then(function (stream) {\n        _this2.setState({\n          hasMedia: true\n        });\n\n        _this2.user.stream = stream;\n\n        try {\n          _this2.myVideo.srcObject = stream; // this.user1.addStream(stream);\n          // return this.user1.createOffer();\n        } catch (e) {\n          // console.log(e)\n          _this2.myVideo.src = URL.createObjectURL(stream);\n        }\n\n        _this2.myVideo.play();\n      }); // .then(offer => this.user1.setLocalDescription(new RTCSessionDescription(offer)))\n      // .then(()=> this.user2.setRemoteDescription(this.user1.localDescription))\n      // .then(()=> this.user2.createAnswer())\n      // .then(answer => this.user2.setLocalDescription(new RTCSessionDescription(answer)))\n      // .then(()=> this.user1.setRemoteDescription(this.user2.localDescription));\n      // this.user2.onaddstream = e =>{\n      //     this.userVideo.srcObject = e.stream;\n      // }\n      // this.userVideo.play();\n    }\n  }, {\n    key: \"setupPusher\",\n    value: function setupPusher() {\n      var _this3 = this;\n\n      this.pusher = new Pusher(\"512085bc3227e25cfd6c\", {\n        authEndpoint: 'http://localhost:5000/api/v1/users/pusher/auth',\n        cluster: 'ap1',\n        auth: {\n          params: this.user.id // headers: {\n          //     'jwt':localStorage.getItem('me')\n          // }\n\n        }\n      });\n      this.channel = this.pusher.subscribe('presence-video-channel');\n      this.channel.bind(\"client-signal-\".concat(this.user.id), function (signal) {\n        var peer = _this3.peers[signal.userId];\n\n        if (peer === undefined) {\n          _this3.setState({\n            otherUserId: signal.userId\n          });\n\n          peer = _this3.startPeer(signal.userId, false);\n        }\n      });\n    }\n  }, {\n    key: \"startPeer\",\n    value: function startPeer(userId) {\n      var _this4 = this;\n\n      var initiator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var peer = new Peer({\n        initiator: initiator,\n        stream: this.user.stream,\n        trickle: false\n      });\n      peer.on('signal', function (data) {\n        _this4.channel.trigger(\"client-signal-\".concat(userId), {\n          type: 'signal',\n          userId: _this4.user.id,\n          data: data\n        });\n      });\n      peer.on('stream', function (stream) {\n        try {\n          _this4.userVideo.srcObject = stream;\n        } catch (e) {\n          _this4.userVideo.src = URL.createObjectURL(stream);\n        }\n\n        _this4.userVideo.play();\n      });\n      peer.on('close', function () {\n        var peer = _this4.peer[userId];\n\n        if (peer !== undefined) {\n          peer.destroy();\n        }\n\n        _this4.peer[userId] = undefined;\n      });\n    }\n  }, {\n    key: \"callTo\",\n    value: function callTo(userId) {\n      this.peers[userId] = this.startPeer(userId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"video-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        className: \"my-video\",\n        ref: function ref(_ref) {\n          _this5.myVideo = _ref;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"video\", {\n        className: \"user-video\",\n        ref: function ref(_ref2) {\n          _this5.userVideo = _ref2;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return VideoPage;\n}(React.Component);\n\nexport { VideoPage as default };","map":{"version":3,"sources":["/Users/jwleong/final-backend/react-front/src/pages/VideoPage.js"],"names":["React","MediaHandler","Pusher","Peer","VideoPage","state","hasMedia","otherUserId","user","JSON","parse","localStorage","me","stream","peers","mediaHandler","setupPusher","callTo","bind","startPeer","getPermissions","then","setState","myVideo","srcObject","e","src","URL","createObjectURL","play","pusher","authEndpoint","cluster","auth","params","id","channel","subscribe","signal","peer","userId","undefined","initiator","trickle","on","data","trigger","type","userVideo","destroy","ref","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB,C,CACA;;IAEqBC,S;;;;;AACjB,uBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIA,UAAKC,IAAL,GAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,EAAxB,EAA4BJ,IAAxC;AACA,UAAKA,IAAL,CAAUK,MAAV,GAAmB,IAAnB;AACA,UAAKC,KAAL,GAAa,EAAb;AACA,UAAKC,YAAL,GAAoB,IAAId,YAAJ,EAApB;;AACA,UAAKe,WAAL;;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,uDAAd;AACA,UAAKF,WAAL,GAAmB,MAAKA,WAAL,CAAiBE,IAAjB,uDAAnB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,uDAAjB;AAbU;AAcb;;;;yCAEmB;AAAA;;AAChB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,WAAKH,YAAL,CAAkBK,cAAlB,GACCC,IADD,CACM,UAAAR,MAAM,EAAI;AACZ,QAAA,MAAI,CAACS,QAAL,CAAc;AAAChB,UAAAA,QAAQ,EAAC;AAAV,SAAd;;AACA,QAAA,MAAI,CAACE,IAAL,CAAUK,MAAV,GAAmBA,MAAnB;;AACA,YAAI;AACA,UAAA,MAAI,CAACU,OAAL,CAAaC,SAAb,GAAyBX,MAAzB,CADA,CAEJ;AACA;AACC,SAJD,CAIE,OAAMY,CAAN,EAAQ;AACN;AACA,UAAA,MAAI,CAACF,OAAL,CAAaG,GAAb,GAAmBC,GAAG,CAACC,eAAJ,CAAoBf,MAApB,CAAnB;AACH;;AACD,QAAA,MAAI,CAACU,OAAL,CAAaM,IAAb;AACH,OAbD,EAlBgB,CAgChB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACH;;;kCAEY;AAAA;;AACT,WAAKC,MAAL,GAAc,IAAI5B,MAAJ,CAAW,sBAAX,EAAkC;AAC5C6B,QAAAA,YAAY,EAAC,gDAD+B;AAE5CC,QAAAA,OAAO,EAAC,KAFoC;AAG5CC,QAAAA,IAAI,EAAC;AACDC,UAAAA,MAAM,EAAC,KAAK1B,IAAL,CAAU2B,EADhB,CAED;AACA;AACA;;AAJC;AAHuC,OAAlC,CAAd;AAUA,WAAKC,OAAL,GAAe,KAAKN,MAAL,CAAYO,SAAZ,CAAsB,wBAAtB,CAAf;AACA,WAAKD,OAAL,CAAalB,IAAb,yBAAmC,KAAKV,IAAL,CAAU2B,EAA7C,GAAkD,UAACG,MAAD,EAAU;AACxD,YAAIC,IAAI,GAAG,MAAI,CAACzB,KAAL,CAAWwB,MAAM,CAACE,MAAlB,CAAX;;AACA,YAAGD,IAAI,KAAKE,SAAZ,EAAsB;AAClB,UAAA,MAAI,CAACnB,QAAL,CAAc;AAACf,YAAAA,WAAW,EAAE+B,MAAM,CAACE;AAArB,WAAd;;AACAD,UAAAA,IAAI,GAAG,MAAI,CAACpB,SAAL,CAAemB,MAAM,CAACE,MAAtB,EAA6B,KAA7B,CAAP;AACH;AACJ,OAND;AAOH;;;8BAESA,M,EAAwB;AAAA;;AAAA,UAAjBE,SAAiB,uEAAL,IAAK;AAC9B,UAAMH,IAAI,GAAG,IAAIpC,IAAJ,CAAS;AAClBuC,QAAAA,SAAS,EAATA,SADkB;AAElB7B,QAAAA,MAAM,EAAE,KAAKL,IAAL,CAAUK,MAFA;AAGlB8B,QAAAA,OAAO,EAAE;AAHS,OAAT,CAAb;AAKAJ,MAAAA,IAAI,CAACK,EAAL,CAAQ,QAAR,EAAiB,UAACC,IAAD,EAAQ;AACrB,QAAA,MAAI,CAACT,OAAL,CAAaU,OAAb,yBAAsCN,MAAtC,GAA+C;AAC3CO,UAAAA,IAAI,EAAC,QADsC;AAE3CP,UAAAA,MAAM,EAAC,MAAI,CAAChC,IAAL,CAAU2B,EAF0B;AAG3CU,UAAAA,IAAI,EAACA;AAHsC,SAA/C;AAKH,OAND;AAOAN,MAAAA,IAAI,CAACK,EAAL,CAAQ,QAAR,EAAiB,UAAC/B,MAAD,EAAU;AACvB,YAAI;AACA,UAAA,MAAI,CAACmC,SAAL,CAAexB,SAAf,GAA2BX,MAA3B;AACH,SAFD,CAEE,OAAMY,CAAN,EAAQ;AACN,UAAA,MAAI,CAACuB,SAAL,CAAetB,GAAf,GAAqBC,GAAG,CAACC,eAAJ,CAAoBf,MAApB,CAArB;AACH;;AACD,QAAA,MAAI,CAACmC,SAAL,CAAenB,IAAf;AACH,OAPD;AAQAU,MAAAA,IAAI,CAACK,EAAL,CAAQ,OAAR,EAAgB,YAAI;AAChB,YAAIL,IAAI,GAAG,MAAI,CAACA,IAAL,CAAUC,MAAV,CAAX;;AACA,YAAGD,IAAI,KAAKE,SAAZ,EAAsB;AAClBF,UAAAA,IAAI,CAACU,OAAL;AACH;;AACD,QAAA,MAAI,CAACV,IAAL,CAAUC,MAAV,IAAoBC,SAApB;AACH,OAND;AAOH;;;2BAEMD,M,EAAQ;AACX,WAAK1B,KAAL,CAAW0B,MAAX,IAAqB,KAAKrB,SAAL,CAAeqB,MAAf,CAArB;AACH;;;6BAEQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,UAAjB;AAA4B,QAAA,GAAG,EAAE,aAACU,IAAD,EAAQ;AAAC,UAAA,MAAI,CAAC3B,OAAL,GAAe2B,IAAf;AAAoB,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,GAAG,EAAE,aAACA,KAAD,EAAQ;AAAC,UAAA,MAAI,CAACF,SAAL,GAAiBE,KAAjB;AAAsB,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,CADJ;AAaH;;;;EAlIkClD,KAAK,CAACmD,S;;SAAxB/C,S","sourcesContent":["import React from 'react';\nimport MediaHandler from '../components/MediaHandler';\nimport Pusher from 'pusher-js';\nimport Peer from 'simple-peer';\n// import Pusher from '../server'\n\nexport default class VideoPage extends React.Component {\n    constructor() { \n        super();\n        this.state = {\n            hasMedia: false,\n            otherUserId: null\n        }\n        this.user = JSON.parse(localStorage.me).user;\n        this.user.stream = null;\n        this.peers = {};\n        this.mediaHandler = new MediaHandler();\n        this.setupPusher();\n        this.callTo = this.callTo.bind(this);\n        this.setupPusher = this.setupPusher.bind(this);\n        this.startPeer = this.startPeer.bind(this);\n    }\n   \n    componentWillMount(){\n        // this.user1 = new RTCPeerConnection()\n        // this.user2 = new RTCPeerConnection()\n\n        // this.user1.onicecandidate = (e) =>{\n        //     if (e.candidate) {\n        //         this.user2.addIceCandidate(e.candidate);\n        //     }\n        // }\n        // this.user2.onicecandidate = (e) =>{\n        //     if (e.candidate) {\n        //         this.user1.addIceCandidate(e.candidate);\n        //     }\n        // }\n        // this.pc.oniceconnectionstatechange = (e) =>{\n        //     console.log(e)\n        // }\n        \n        this.mediaHandler.getPermissions()\n        .then(stream => {\n            this.setState({hasMedia:true});\n            this.user.stream = stream;\n            try {\n                this.myVideo.srcObject = stream;\n            // this.user1.addStream(stream);\n            // return this.user1.createOffer();\n            } catch(e){\n                // console.log(e)\n                this.myVideo.src = URL.createObjectURL(stream);\n            }\n            this.myVideo.play();\n        })\n        // .then(offer => this.user1.setLocalDescription(new RTCSessionDescription(offer)))\n        // .then(()=> this.user2.setRemoteDescription(this.user1.localDescription))\n        // .then(()=> this.user2.createAnswer())\n        // .then(answer => this.user2.setLocalDescription(new RTCSessionDescription(answer)))\n        // .then(()=> this.user1.setRemoteDescription(this.user2.localDescription));\n        \n        // this.user2.onaddstream = e =>{\n        //     this.userVideo.srcObject = e.stream;\n        // }\n        // this.userVideo.play();\n    }\n\n    setupPusher(){\n        this.pusher = new Pusher(\"512085bc3227e25cfd6c\",{\n            authEndpoint:'http://localhost:5000/api/v1/users/pusher/auth',\n            cluster:'ap1',\n            auth:{\n                params:this.user.id,\n                // headers: {\n                //     'jwt':localStorage.getItem('me')\n                // }\n            }\n        });\n        this.channel = this.pusher.subscribe('presence-video-channel');\n        this.channel.bind(`client-signal-${this.user.id}`,(signal)=>{\n            let peer = this.peers[signal.userId];\n            if(peer === undefined){\n                this.setState({otherUserId: signal.userId});\n                peer = this.startPeer(signal.userId,false)\n            }\n        });\n    }\n\n    startPeer(userId,initiator = true){\n        const peer = new Peer({\n            initiator,\n            stream: this.user.stream,\n            trickle: false\n        });\n        peer.on('signal',(data)=>{\n            this.channel.trigger(`client-signal-${userId}`,{\n                type:'signal',\n                userId:this.user.id,\n                data:data\n            })\n        })\n        peer.on('stream',(stream)=>{\n            try {\n                this.userVideo.srcObject = stream;\n            } catch(e){\n                this.userVideo.src = URL.createObjectURL(stream);\n            }\n            this.userVideo.play();\n        })\n        peer.on('close',()=>{\n            let peer = this.peer[userId];\n            if(peer !== undefined){\n                peer.destroy();\n            }\n            this.peer[userId] = undefined;\n        })\n    }\n\n    callTo(userId) {\n        this.peers[userId] = this.startPeer(userId);\n    }\n\n    render() {\n        return (\n            <div className='App'>\n                <div className=\"video-container\">\n                    <video className=\"my-video\" ref={(ref) =>{this.myVideo = ref;}}></video> \n                    <video className=\"user-video\" ref={(ref) =>{this.userVideo = ref;}}></video>\n                </div>\n                {/* <form ref={(ref) =>{this.form = ref;}}>\n                    <textarea id=\"incoming\" ref={(ref) =>{this.offer = ref;}}></textarea>\n                    <button type=\"submit\">submit</button>\n                </form>\n                <pre id=\"outgoing\" ref={(ref) =>{this.answer = ref;}}></pre> */}\n            </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}
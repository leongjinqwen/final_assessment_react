{"ast":null,"code":"import _defineProperty from \"/Users/jwleong/final-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jwleong/final-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jwleong/final-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jwleong/final-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jwleong/final-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jwleong/final-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jwleong/final-frontend/src/containers/LoginModal.js\";\nimport React from 'react';\nimport { Button, UncontrolledAlert, FormGroup, FormText, Input, Modal, ModalHeader, ModalBody, ModalFooter, Label } from 'reactstrap';\nimport axios from 'axios';\nimport ResetModal from './ResetModal';\nimport { Link } from 'react-router-dom';\n\nvar LoginModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginModal, _React$Component);\n\n  function LoginModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: '',\n      password: '',\n      emailValid: false,\n      passwordValid: false,\n      formValid: false,\n      hasErrors: false,\n      errors: [],\n      isLogin: false,\n      success: [],\n      reset: false\n    };\n\n    _this.handleChange = function (event) {\n      var name = event.target.name;\n      var value = event.target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        _this.validateField(name, value);\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      axios({\n        method: 'post',\n        url: 'https://photofy.herokuapp.com/api/v1/login',\n        data: {\n          email: _this.state.email,\n          password: _this.state.password\n        }\n      }).then(function (response) {\n        // debugger\n        console.log(response);\n        localStorage.setItem('me', JSON.stringify(response.data));\n        setTimeout(_this.props.toggle, 1000);\n\n        _this.setState({\n          isLogin: true,\n          success: response.data.message\n        });\n      }).catch(function (error) {\n        // debugger\n        _this.setState({\n          hasErrors: true,\n          errors: error.response.data.message\n        });\n      });\n    };\n\n    _this.reset = function () {\n      _this.setState({\n        reset: !_this.state.reset\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginModal, [{\n    key: \"validateField\",\n    value: function validateField(fieldName, value) {\n      var emailValid = this.state.emailValid;\n      var passwordValid = this.state.passwordValid;\n\n      switch (fieldName) {\n        case 'email':\n          emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n          break;\n\n        case 'password':\n          passwordValid = value.length >= 8;\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        emailValid: emailValid,\n        passwordValid: passwordValid\n      }, this.validateForm);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      this.setState({\n        formValid: this.state.emailValid && this.state.passwordValid\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          formValid = _this$state.formValid,\n          isLogin = _this$state.isLogin,\n          success = _this$state.success,\n          hasErrors = _this$state.hasErrors,\n          errors = _this$state.errors;\n      var _this$props = this.props,\n          toggle = _this$props.toggle,\n          signup = _this$props.signup,\n          showModal = _this$props.showModal;\n      var closeBtn = React.createElement(\"button\", {\n        className: \"close\",\n        onClick: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"\\xD7\");\n      return React.createElement(React.Fragment, null, this.state.reset ? React.createElement(ResetModal, {\n        reset: this.state.reset,\n        toggle: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }) : React.createElement(Modal, {\n        isOpen: showModal,\n        toggle: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: toggle,\n        close: closeBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"PHOTOFY\"), isLogin && React.createElement(UncontrolledAlert, {\n        color: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, success), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, hasErrors && React.createElement(UncontrolledAlert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, errors), React.createElement(Input, {\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"Email\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        color: \"muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"text-primary\",\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Forget your password?\"))), React.createElement(Button, {\n        color: \"primary\",\n        block: true,\n        disabled: !formValid,\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Login\")), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"New user? Sign up now!\"), React.createElement(Button, {\n        color: \"secondary\",\n        onClick: signup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Sign up\"))));\n    }\n  }]);\n\n  return LoginModal;\n}(React.Component);\n\nexport { LoginModal as default };","map":{"version":3,"sources":["/Users/jwleong/final-frontend/src/containers/LoginModal.js"],"names":["React","Button","UncontrolledAlert","FormGroup","FormText","Input","Modal","ModalHeader","ModalBody","ModalFooter","Label","axios","ResetModal","Link","LoginModal","state","email","password","emailValid","passwordValid","formValid","hasErrors","errors","isLogin","success","reset","handleChange","event","name","target","value","setState","validateField","handleSubmit","preventDefault","method","url","data","then","response","console","log","localStorage","setItem","JSON","stringify","setTimeout","props","toggle","message","catch","error","fieldName","match","length","validateForm","signup","showModal","closeBtn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, UncontrolledAlert, FormGroup, FormText, Input, Modal, ModalHeader, ModalBody, ModalFooter,Label } from 'reactstrap';\nimport axios from 'axios';\nimport ResetModal from './ResetModal';\nimport { Link } from 'react-router-dom';\n\n\nexport default class LoginModal extends React.Component {\n    state = {\n        email: '',\n        password: '',\n        emailValid: false,\n        passwordValid: false,\n        formValid: false,\n        hasErrors: false,\n        errors: [],\n        isLogin: false,\n        success: [],\n        reset : false\n      }\n    \n    handleChange=(event)=> {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({ [name]: value },\n            () => {this.validateField(name,value)});\n    }\n    \n    handleSubmit=(event)=> {\n        event.preventDefault();\n        axios({\n            method: 'post',\n            url: 'https://photofy.herokuapp.com/api/v1/login',\n            data: { \n                email : this.state.email,\n                password: this.state.password\n            }, \n        })\n        .then(response => {\n            // debugger\n            console.log(response);\n            localStorage.setItem('me', JSON.stringify(response.data));\n            setTimeout(this.props.toggle,1000);\n            this.setState({\n                isLogin : true,\n                success : response.data.message,\n            })\n        })\n        .catch(error => {\n            // debugger\n            this.setState({\n                hasErrors : true,\n                errors : error.response.data.message,\n            })\n        })\n    }\n\n    validateField(fieldName,value) {\n        let emailValid = this.state.emailValid;\n        let passwordValid = this.state.passwordValid;\n\n        switch(fieldName) {\n            case 'email':\n            emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n            break;\n            case 'password':\n            passwordValid = value.length >= 8;\n            break;\n            default:\n            break;\n        }\n        this.setState({ emailValid: emailValid,\n                        passwordValid: passwordValid\n                        }, this.validateForm);\n    }\n\n    validateForm() {\n        this.setState({formValid: this.state.emailValid && this.state.passwordValid});\n    }\n\n    reset=()=>{\n        this.setState({\n            reset : !this.state.reset\n        })\n    }\n      \n  render() {\n    const {formValid,isLogin,success,hasErrors,errors} = this.state\n    const {toggle, signup, showModal} = this.props\n    const closeBtn = <button className=\"close\" onClick={toggle}>&times;</button>;\n    return (\n        <>\n            {this.state.reset ? <ResetModal reset={this.state.reset} toggle={toggle} /> : \n            <Modal isOpen={showModal} toggle={toggle}>\n                <ModalHeader toggle={toggle} close={closeBtn}>PHOTOFY</ModalHeader>\n                { isLogin && <UncontrolledAlert color=\"info\">{success}</UncontrolledAlert> }                \n                <ModalBody>\n                    <FormGroup>\n                        { hasErrors && <UncontrolledAlert color=\"danger\">{errors}</UncontrolledAlert>}\n                        <Input type=\"text\" name=\"email\" placeholder=\"Email\" onChange={this.handleChange} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.handleChange} />\n                        <FormText color=\"muted\"><Link className=\"text-primary\" onClick={this.reset}>Forget your password?</Link></FormText>\n                    </FormGroup>\n                    \n                    <Button color=\"primary\" block disabled={!formValid} onClick={this.handleSubmit} >Login</Button>\n                </ModalBody>\n                <ModalFooter>\n                    <Label for=\"account\">New user? Sign up now!</Label>\n                    <Button color=\"secondary\" onClick={signup}>Sign up</Button>\n                </ModalFooter>\n            </Modal>}\n           \n        </>\n    );\n  }\n}\n\n "]},"metadata":{},"sourceType":"module"}
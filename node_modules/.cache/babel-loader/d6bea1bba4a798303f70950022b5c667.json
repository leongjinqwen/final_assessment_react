{"ast":null,"code":"import _defineProperty from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jwleong/final-backend/react-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jwleong/final-backend/react-front/src/containers/ResetModal.js\";\nimport React from 'react';\nimport { Button, UncontrolledAlert, FormGroup, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport axios from 'axios';\n\nvar ResetModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResetModal, _React$Component);\n\n  function ResetModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResetModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResetModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: '',\n      errors: [],\n      success: [],\n      hasErrors: false,\n      isReset: false\n    };\n\n    _this.handleEmail = function (event) {\n      var name = event.target.name;\n      var value = event.target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleReset = function (event) {\n      event.prevent.default();\n      axios({\n        method: 'post',\n        url: 'http://localhost:5000/api/v1/users/reset',\n        data: {\n          email: _this.state.email\n        }\n      }).then(function (response) {\n        console.log(response);\n        setTimeout(_this.props.toggle, 1000);\n\n        _this.setState({\n          isReset: true,\n          success: response.data.message\n        });\n      }).catch(function (error) {\n        _this.setState({\n          hasErrors: true,\n          errors: error.response.data.message\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ResetModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          reset = _this$props.reset,\n          toggle = _this$props.toggle;\n      var closeBtn = React.createElement(\"button\", {\n        className: \"close\",\n        onClick: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"\\xD7\");\n      return React.createElement(React.Fragment, null, React.createElement(Modal, {\n        isOpen: reset,\n        toggle: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: toggle,\n        close: closeBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Reset Password\"), this.state.isReset ? React.createElement(UncontrolledAlert, {\n        color: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.state.success) : null, React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.state.hasErrors ? React.createElement(UncontrolledAlert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.state.errors) : null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        onChange: this.handleEmail,\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        block: true,\n        disabled: !formValid,\n        onClick: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Send\"))));\n    }\n  }]);\n\n  return ResetModal;\n}(React.Component);\n\nexport { ResetModal as default };","map":{"version":3,"sources":["/Users/jwleong/final-backend/react-front/src/containers/ResetModal.js"],"names":["React","Button","UncontrolledAlert","FormGroup","Input","Modal","ModalHeader","ModalBody","ModalFooter","axios","ResetModal","state","email","errors","success","hasErrors","isReset","handleEmail","event","name","target","value","setState","handleReset","prevent","default","method","url","data","then","response","console","log","setTimeout","props","toggle","message","catch","error","reset","closeBtn","formValid","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, UncontrolledAlert, FormGroup, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport axios from 'axios';\n\nexport default class ResetModal extends React.Component {\n    state = {\n        email: '',\n        errors: [],\n        success: [],\n        hasErrors: false,\n        isReset:false\n    }\n\n    handleEmail=(event)=> {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({ [name]: value });\n    }\n\n    handleReset=(event)=>{\n        event.prevent.default()\n        axios({\n            method: 'post',\n            url: 'http://localhost:5000/api/v1/users/reset',\n            data: { \n                email : this.state.email,\n            }, \n        })\n        .then(response => {\n            console.log(response);\n            setTimeout(this.props.toggle,1000);\n            this.setState({\n                isReset : true,\n                success : response.data.message,\n            })\n            \n        })\n        .catch(error => {\n            this.setState({\n                hasErrors : true,\n                errors : error.response.data.message,\n            })\n        })\n    }\n\n    render() {\n        const {reset,toggle} = this.props\n        const closeBtn = <button className=\"close\" onClick={toggle}>&times;</button>;\n        return (\n        <>\n            <Modal isOpen={reset} toggle={toggle}>\n                <ModalHeader toggle={toggle} close={closeBtn}>Reset Password</ModalHeader>\n                { this.state.isReset ? <UncontrolledAlert color=\"info\">{this.state.success}</UncontrolledAlert> : null }                \n                <ModalBody>\n                    { this.state.hasErrors ? <UncontrolledAlert color=\"danger\">{this.state.errors}</UncontrolledAlert> : null }\n                    <FormGroup>\n                        <Input type=\"email\" name=\"email\" onChange={this.handleEmail} placeholder=\"Email\" />\n                    </FormGroup>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" block disabled={!formValid} onClick={this.handleReset} >Send</Button>                  \n                </ModalFooter>\n            </Modal>\n        </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}